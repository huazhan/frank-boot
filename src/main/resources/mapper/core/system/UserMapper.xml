<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.core.system.user.mapper.UserMapper">

	<resultMap id="selectByIdResultMap" type="com.frank.core.system.user.entity.User" >
  		<id column="id" property="id"/>
		<result column="dept_id" property="deptId"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="sex" property="sex"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="create_by" property="createBy"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_by" property="updateBy"/>
		<result column="remark" property="remark"/>
  		<collection property="roleList" ofType="com.frank.core.system.role.entity.Role">
  			<id column="roleId" property="id"/>
  			<result column="roleName" property="name"/>
  		</collection>
  </resultMap>
  
  <select id="list" resultType="com.frank.core.system.user.entity.User">
  		select *,b.name as "deptName"
  		from sys_user a left join sys_dept b on a.dept_id = b.id 
  		<where>
  			<if test="username != null and username != ''">
  				and a.username like concat('%',#{username},'%')
  			</if>
  			<if test="nickname != null and nickname != ''">
  				and a.nickname like concat('%',#{nickname},'%')
  			</if>
  			<if test="phone != null and phone != ''">
  				and a.phone like concat('%',#{phone},'%') 
  			</if>
  			<if test="sex != null and sex != ''">
  				and a.sex = #{sex}
  			</if>
  			<if test="status != null and status != ''">
  				and a.status = #{status}
  			</if>
  			<if test="deptId != null and deptId != ''">
  				and a.dept_id = #{deptId}
  			</if>
  		</where>
  		order by a.create_time
  </select>
  
  <insert id="insert" useGeneratedKeys="true"  keyProperty="id">
  		insert into sys_user(
  			dept_id,
  			username,
  			password,
  			nickname,
  			sex,
  			status,
  			phone,
  			email,
  			create_by,
  			create_time,
  			update_by,
  			remark
  		)values(
  			#{deptId},
  			#{username},
  			#{password},
  			#{nickname},
  			#{sex},
  			#{status},
  			#{phone},
  			#{email},
  			#{createBy},
  			#{createTime},
  			#{updateBy},
  			#{remark}
  		)
  </insert>
  
  <insert id="insertUserRole">
	insert into sys_user_role(user_id, role_id) values (#{userId}, #{roleId})
  </insert>
  
  <update id="update">
  		update sys_user 
  		<set>
  			<if test="deptId != null">
  				,dept_id = #{deptId}
  			</if>
  			<if test="username != null and username != ''">
  				,username = #{username}
  			</if>
  			<if test="password != null and password != ''">
  				,password = #{password}
  			</if>
  			<if test="nickname != null and nickname != ''">
  				,nickname = #{nickname}
  			</if>
  			<if test="sex != null and sex != ''">
  				,sex = #{sex}
  			</if>
  			,phone = #{phone}
  			,email = #{email}
  			<if test="status != null and status != ''">
  				,status = #{status}
  			</if>
  			<if test="updateBy != null and updateBy != ''">
  				,update_by = #{updateBy}
  			</if>
  			<if test="remark != null and remark != ''">
  				,remark = #{remark}
  			</if>
  		</set>
  		where id = #{id}
  </update>
  
  <delete id="delete">
  		delete from sys_user where id = #{id}
  </delete>
  
  <delete id="batchDelete">
  		delete from sys_user where id in 
  		<foreach index="index" collection="idList" item="item"  separator="," open="(" close=")" >
  			#{item}
  		</foreach>
  </delete>
  
   <select id="selectById" resultMap="selectByIdResultMap">
  		SELECT
			a.*,
			c.id as 'roleId',
			c.name as 'roleName'
		FROM
			sys_user a LEFT JOIN sys_user_role b ON a.id = b.user_id 
			LEFT JOIN sys_role c ON b.role_id = c.id
		WHERE
			a.id = #{id}
  </select>
  
  <select id="selectByDeptIdIncludeSub" resultType="com.frank.core.system.user.entity.User">
  		select * from sys_user where dept_id in (
			select id from sys_dept where FIND_IN_SET(#{deptId},ids)
		)
  </select>
  
  <delete id="deleteUserRoleByUserId">
  		delete from sys_user_role where user_id = #{id}
  </delete>
  
  <select id="seleteByUserName" resultType="com.frank.framework.security.entity.MyUserDetails">
  		select * from sys_user where username = #{username}
  </select>
  
  <select id="selectRoleAndPermsListByUserName" resultType="com.frank.framework.security.entity.RoleAndPerms">
  		SELECT 
			c.role_key,
			e.perms 
		FROM
			sys_user a LEFT JOIN sys_user_role b ON a.id = b.user_id 
			LEFT JOIN sys_role c  ON b.role_id = c.id 
			LEFT JOIN sys_role_menu d ON c.id = d.role_id 
			LEFT JOIN sys_menu e ON d.menu_id = e.id AND e.type IN ('2','3')
		WHERE
		 a.username = #{username}
		 ORDER BY c.id
  </select>
  
</mapper>